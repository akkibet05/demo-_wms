<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head'); -%>
    <!-- <style>
        /* .cv-tbl tr,td,th{
            border: 1px solid;
            width: 200%;
        } */

        .cv-tbl td{
            border: 1px solid;
            /* width: 100%; */
        }
        
        .center {
          text-align: center;
        }
        
        
        .table-responsive {
            overflow-x: scroll;
            /* max-width: 100%; */
        }
        
        .vertical-text {
            writing-mode: vertical-lr;
            text-orientation: sideways;
        }
    </style> -->


    <style>
   
      .cv-tbl td{
            border: 1px solid;
            /* width: 100%; */
        }
        
        .center {
          text-align: center;
        }
        
        
        .table-responsive {
            overflow-x: scroll;
            /* max-width: 100%; */
        }

      table, th, td {
          border: 1px solid black;
      }



    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 9999999999999; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
      
        
      }
      
      /* Modal Content */
      .modal-content {
        position: relative;
        background-color: #fefefe;
        margin: auto;
        padding: 0;
        border: 1px solid #888;
        width: 50%;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);
        -webkit-animation-name: animatetop;
        -webkit-animation-duration: 0.4s;
        animation-name: animatetop;
        animation-duration: 0.4s
      }
      
      /* Add Animation */
      @-webkit-keyframes animatetop {
        from {top:-300px; opacity:0} 
        to {top:0; opacity:1}
      }
      
      @keyframes animatetop {
        from {top:-300px; opacity:0}
        to {top:0; opacity:1}
      }
      
      /* The Close Button */
      .close {
        color: white;
        float: right;
        font-size: 28px;
        font-weight: bold;
      }
      
      .close:hover,
      .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
      }
      
      .modal-header {
        padding: 2px 16px;
        background-color: rgba(34, 34, 51, 0.705);
        color: white;
      }
      
      .modal-body {padding: 2px 16px;}
      
      .modal-footer {
        padding: 2px 16px;
        background-color: rgba(34, 34, 51, 0.705);
        color: white;
        display: flex;
        justify-content: center;
        display: grid;
          place-items: center;
      }


      .emailcontainer {
          display: none;
          position: absolute;
          /* top: 40px;
          left: 20px; */
          background-color: rgb(255, 255, 255);
          color:#000000;
          border:solid 1px #000000;
          padding:10px;
          /* padding-left:50px; */
          /* padding-right:200px; */
          overflow-x: auto; 
          z-index: 9999999999999;
      }
      table td {
          word-wrap: break-word;
          white-space: nowrap;
          /* overflow: hidden; */
          text-overflow: ellipsis;
      }

      /* .button-text { */
          /* padding:0 25px; */
          /* line-height:56px; */
          /* letter-spacing:3px */
      /* } */
      .button-text.contactme {
          position: relative;
          /* font-weight:50px; */
}

  </style>
</head>

<body>
    <!--*******************
    Preloader start
********************-->
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>
    <!--*******************
    Preloader end
********************-->

    <!--**********************************
    Main wrapper start
***********************************-->
    <div id="main-wrapper">

        <!--**********************************
        Nav header start
    ***********************************-->
        <%- include('./partials/header_logo'); -%>

            <!--**********************************
        Nav header end
    ***********************************-->

            <!--**********************************
        Header start
    ***********************************-->
            <%- include('./partials/header',{titel: language.WareHouse_Map}); -%>

                <!--**********************************
        Header end ti-comment-alt
    ***********************************-->

                <!--**********************************
        Sidebar start
    ***********************************-->
                <%- include('./partials/sidebar'); -%>

                    <!--**********************************
        Sidebar end
    ***********************************-->

                    <div class="content-body">
                        <div class="card">
                            <div class="container-fluid">
                                <div class="card-header">
                                            <h4 class="card-title">Warehouse Map</h4>
                                             
                                         
                                </div>
                                
                                <div class="card-header" style="display: flex; flex-direction: column; align-items: center;">
                                <div class="row">
                                    <div class="mb-3 col-md-4">
                                        <label for="warrehouse">Warehouse <span class="text-red">*</span> </label>
                                        <select class="form-control" name="warehouse" id="warehouse" required>
                                           
                                            <% warehouse.forEach((data)=> { %>
                                            <option value="<%= data.name %>"><%= data.name %></option>
                                            <% }) %>
                                        </select>
                                    </div>
                                    
                                    
                                    <div class="mb-3 col-md-4">
                                        <label for="warrehouse">Room <span class="text-red">*</span> </label>
                                        <select class="form-control" name="room" id="room" required>
                                            <option value="Ambient" >Ambient</option>
                                            <option value="Enclosed" >Enclosed</option>
                                        </select>
                                    </div>
                                    
                                  
                                    <div class="mb-3 col-md-4">
                                        <label for="warrehouse">Level <span class="text-red">*</span> </label>
                                        <select class="form-control" name="level" id="level" required>
                                        
                                            <option value="1" >One</option>
                                            <option value="2" >Two</option>
                                            <option value="3" >Three</option>
                                            <option value="4" >Four</option>
                                        </select>
                                    </div>


                                    <!-- <div class="mb-3 col-md-3">
                                        <label for="warrehouse">Isle <span class="text-red">*</span> </label>
                                        <select class="form-control" name="isle" id="isle" required>
                                            <option value="ALL" >All</option>
                                            <option value="A" >A</option>
                                            <option value="B" >B</option>
                                            <option value="C" >C</option>
                                            <option value="D" >D</option>
                                        </select>
                                    </div> -->
                                    



                                </div> 
                                
                                <div class="row">
                                    <button type="submit" class="btn btn-primary w-100" id="filterButton">Generate</button>
                                </div> 
                            </div>
                            
                           <!--<div class="container-fluid"> -->
                           <!--     <table id="dataTable" border="1" style="border-collapse: collapse;" class="cv-tbl table-responsive">-->
                           <!--         <tbody>-->
                                        
                           <!--         </tbody>-->
                           <!--     </table>-->
                           <!-- </div>-->
                           
                           <div class="container-fluid">
                            <div class="table-responsive">
                                <table id="dataTable" class="cv-tbl">
                                    <tbody>
                                   
                                    </tbody>
                                </table>
                            </div>
                        </div>

                           </div>
                       </div>
                    </div>

                    <!--**********************************
            Footer start
        ***********************************-->
                    <%- include('./partials/footer'); -%>

                        <!--**********************************
            Footer end
        ***********************************-->

    <!--**********************************
        Main wrapper end
    ***********************************-->

    <!-- start Toastr -->
    <%- include('./partials/toastr'); -%>
    <!-- End Toastr -->

    <!--**********************************
        Scripts
    ***********************************-->
   
    <%- include('./partials/script'); -%>
    <script>
      function jsonToArray(jsonData) {
        var data = [];
        
        jsonData.forEach((item) => {
          
          var isle = item.isle;
          var pallet = parseInt(item.pallet);
          var count = item.totalQuantity;
         
        if (!data[isle]) {
            data[isle] = {};
          }
          data[isle][pallet] = count;
          data[isle]['pallet'] = pallet;

          item.products.forEach((items) => {
            console.log(items)
            if (!data["prd_data_name"]) {
                data["prd_data_name"] = [];
            }

            if (!data["prd_data_qty"]) {
                data["prd_data_qty"] = [];
            }


            if (!data["prd_code"]) {
                data["prd_code"] = [];
            }


            if (!data["prd_data_name"][isle]) {
                data["prd_data_name"][isle] = [];
            }

            if (!data["prd_data_qty"][isle]) {
                data["prd_data_qty"][isle] = [];
            }

            if (!data["prd_code"][isle]) {
                data["prd_code"][isle] = [];
            }


            if (!data["prd_data_name"][isle][pallet]) {
                data["prd_data_name"][isle][pallet] = [];
            }

            if (!data["prd_data_qty"][isle][pallet]) {
                data["prd_data_qty"][isle][pallet] = [];
            }

            if (!data["prd_code"][isle][pallet]) {
                data["prd_code"][isle][pallet] = [];
            }


            data["prd_data_name"][isle][pallet].push(items.product_name);
            data["prd_data_qty"][isle][pallet].push(items.product_quantity);
            data["prd_code"][isle][pallet].push(items.product_code);
            
          })

          
        });

        return data;
      }


      $(document).ready(function() {
  // Initialize the DataTable
  dataBody = $('#dataTable tbody');

  // Event handler for the filter button click
  $('#filterButton').click(function() {
    var warehouse_value = $('#warehouse').val();
    var level_value = parseInt($('#level').val());
    var room_value = $('#room').val();
    var isle_value = $('#isle').val();
    

    // Make an AJAX request to the server
    $.ajax({
      url: '/warehousemap_Income/MapData',
      type: 'POST',
      data: { warehouseNew: warehouse_value, level: level_value, rooms: room_value },
      success: function(response) {
        // Clear the existing table data
        dataBody.empty();
        
        const DataRes = jsonToArray(response);
        let dataIsle 
        let dataIsleHalf
        isle_value = "ALL"
        if(isle_value == "ALL"){
          dataIsle = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J"];
          dataIsleHalf = ["G", "H", "I", "J"];
        }else{
          dataIsle = [isle_value];
          dataIsleHalf = [isle_value];
        }
        
        switch(warehouse_value) {
            case "Pasig":
                if(room_value == "Ambient"){
                    if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';

                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {

                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }

                        
                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              
                              datahoverItem[IsleData][i] = '';
                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                               
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  // datahoverItem[IsleData][i] += '<tr>';
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              
                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                             
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += '</tr>';
                        
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
            
                    }
            
                    if(level_value == "2"){
                        let j = 477;
                        let k = 531;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                     
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }
                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;

                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += '</tr>';
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
                    }
            
                    if(level_value == "3"){
                        
                        
                        let j = 953;
                        let k = 1007;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal+ '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
                    }
            
                    if(level_value == "4"){
                            let j = 1429;
                            let k = 1483;
                            var datahoverItem = [];
                            
                            dataIsle.forEach(function(isleItem) {
                              var dataItems = '';
                              const IsleData = isleItem;
                            
                              dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                            
                              let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                            
                              for (let i = j; i < j + columnCount; i++) {
                                dataItems += '<td><h4>' + i + '</h4></td>';
                              }
                            
                              dataItems += '</tr><tr>';
                            
                              for (let i = j; i < j + columnCount; i++) {
                                if (DataRes[IsleData] && DataRes[IsleData][i]) {
                                  if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                                } else {
                                  dataItems += '<td>&nbsp;</td>';
                                }
                              }
                              dataItems += "</tr>";
                              // dataItems += '</tr><tr style="height: 5px;">';
                            
                              // for (let i = j; i < j + columnCount; i++) {
                              //   dataItems += '<td>&nbsp;</td>';
                              // }
                            
                              j += columnCount; // Update j based on the range
                            
                              // dataItems += "</tr>";

                              $(document).ready(function () {
                              $(".button-text.contactme").hover(function () {
                                    // alert($(this).data("has-data"))
                                      if ($(this).data("has-data") === true) {
                                          $(this).find('.emailcontainer').show('slow');
                                      }
                                  }, function () {
                                      $(this).find('.emailcontainer').hide('slow');
                                  });
                              });
                            
                              dataBody.append(dataItems);
                            });
                        }
                }else if(room_value == "Enclosed"){
                    if(level_value == "1"){
                        
                        let j = 1;
                        let k = 13;
                        var datahoverItem = [];
                        dataIsleHalf.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'H' && isleItem <= 'J') ? 14 : 13;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                        
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
            
                    }
                    
                    if(level_value == "2"){
                        
                        let j = 56;
                        let k = 68;
                        var datahoverItem = [];
                        dataIsleHalf.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'H' && isleItem <= 'J') ? 14 : 13;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';

                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';



                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          // j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
            
                    }
                    
                    if(level_value == "3"){
                        
                        let j = 111;
                        let k = 123;
                        var datahoverItem = [];
                        dataIsleHalf.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'H' && isleItem <= 'J') ? 14 : 13;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';

                                    datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";
                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                          dataBody.append(dataItems);
                        });
            
                    }
                    
                    if(level_value == "4"){
                        
                        let j = 166;
                        let k = 178;
                        var datahoverItem = [];
                        dataIsleHalf.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'H' && isleItem <= 'J') ? 14 : 13;
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });
            
                    }
                }
            break
            
            case "Iloilo":
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 145 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 145) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
            break
            
            case "Bacolod":
                
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h2>' + isleItem + '</h2></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 60 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 60) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';
                                  
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
            break
            
            case "Cebu":
                
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h2>' + isleItem + '</h2></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 150 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 150) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
                
                
            break
            
            case "Tacloban":
                
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h2>' + isleItem + '</h2></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 94 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 94) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                          dataItems += "</tr>";
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          // dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                       
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
                
                
            break
            
            case "Davao":
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h2>' + isleItem + '</h2></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 150 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 150) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                        
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
                
                
            break
            
            case "CDO":
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h2>' + isleItem + '</h2></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 200 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 200) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';

                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                        
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          dataItems += "</tr>";

                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                        
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
            break

            case "Zamboanga":
                if(room_value == "Ambient"){
                   if(level_value == "1"){
                        
                        let j = 1;
                        let k = 54;
                        var datahoverItem = [];
                        dataIsle.forEach(function(isleItem) {
                          var dataItems = '';
                          const IsleData = isleItem;
                        
                          dataItems = '<tr><td rowspan="3"><strong><h1>' + isleItem + '</h1></strong></td></tr>';
                        
                          let columnCount = (isleItem >= 'G' && isleItem <= 'J') ? 38 : 54;
                          columnCount = Math.min(columnCount, 50 - j + 1); // Limit columnCount to remaining pallets
                        
                          if (j > 50) {
                            return; // Skip rendering the remaining letters if j exceeds 145
                          }
                        
                          for (let i = j; i < j + columnCount; i++) {
                            dataItems += '<td><h4>' + i + '</h4></td>';
                          }
                        
                          dataItems += '</tr><tr>';
                        
                          for (let i = j; i < j + columnCount; i++) {
                            if (DataRes[IsleData] && DataRes[IsleData][i]) {
                              if(DataRes[IsleData][i] >= 500){
                                color = "Tomato";
                              }else if(DataRes[IsleData][i] >= 250){
                                color = "yellow";
                              }else{
                               color = "white";
                              }


                              const numberOfProducts = DataRes.prd_data_name[IsleData][i].length;

                              if (!datahoverItem[IsleData]) {
                                datahoverItem[IsleData] = {};
                              }

                              if (!datahoverItem[IsleData][i]) {
                                datahoverItem[IsleData][i] = {};
                              }

                              datahoverItem[IsleData][i] = '';

                              for (var x = 0; x <= numberOfProducts - 1; x++) {

                              
                                if(DataRes && DataRes.prd_data_name &&  DataRes.prd_data_name[IsleData] && DataRes.prd_data_name[IsleData][i] && DataRes.prd_data_qty &&  DataRes.prd_data_qty[IsleData] && DataRes.prd_data_qty[IsleData][i]){
                                  
                                  console.log(datahoverItem[IsleData][i])
                                  datahoverItem[IsleData][i] += '<tr>';
                                  
                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_code[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';


                                  datahoverItem[IsleData][i]  += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_name[IsleData][i];
                                  datahoverItem[IsleData][i] += '</td>';

                                  datahoverItem[IsleData][i] += '<td>';
                                  datahoverItem[IsleData][i]  += DataRes.prd_data_qty[IsleData][i];
                                  datahoverItem[IsleData][i]  += '</td>';
                                  datahoverItem[IsleData][i]  += '</tr>';

                                }
                              }

                              const NumTotal = Math.round(DataRes[IsleData][i] * 1000) / 1000;
                              dataItems += '<td class="center button-text contactme"  data-has-data="' + (datahoverItem[IsleData][i]  ? true : false) + '" bgcolor="'+color+'"><b style="color:black">' + NumTotal + '</b><div class="emailcontainer"><table style="width: 100%;"><thead><tr><td>Item Code</td><td>Product Name</td><td>Qty</td></tr></thead><tbody>'+datahoverItem[IsleData][i] +'</tbody></table></div></td>';
                            } else {
                              dataItems += '<td>&nbsp;</td>';
                            }
                          }
                        
                          // dataItems += '</tr><tr style="height: 5px;">';
                        
                          // for (let i = j; i < j + columnCount; i++) {
                          //   dataItems += '<td>&nbsp;</td>';
                          // }
                        
                          j += columnCount; // Update j based on the range
                        
                          dataItems += "</tr>";
                          $(document).ready(function () {
                          $(".button-text.contactme").hover(function () {
                                // alert($(this).data("has-data"))
                                  if ($(this).data("has-data") === true) {
                                      $(this).find('.emailcontainer').show('slow');
                                  }
                              }, function () {
                                  $(this).find('.emailcontainer').hide('slow');
                              });
                          });
                          dataBody.append(dataItems);
                        });

            
                    } 
                }
            break
        }
        
        
        
      },
      error: function(error) {
        console.log('Error:', error);
      }
    });
  });
});



      
    </script>

        <!--**********************************
        Scripts end
    ***********************************-->
</body>

</html>